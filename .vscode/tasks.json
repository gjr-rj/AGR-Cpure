{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "build",
            "type": "shell",
            "command": "make",
            "args": [],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "presentation": {
                // Reveal the output only if unrecognized errors occur.
                "reveal": "always"
            },
            // Use the standard MS compiler pattern to detect errors, warnings and infos
            "problemMatcher": "$msCompile"
        },
        {
            "label": "build (debug)",
            "type": "shell",
            "command": "make",
            "args": ["debu=1"],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "presentation": {
                // Reveal the output only if unrecognized errors occur.
                "reveal": "always"
            },
            // Use the standard MS compiler pattern to detect errors, warnings and infos
            "problemMatcher": "$msCompile"
        },
        {
            "label": "build (Sanitize)",
            "type": "shell",
            "command": "make",
            "args": ["sanitze=1"],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "presentation": {
                // Reveal the output only if unrecognized errors occur.
                "reveal": "always"
            },
            // Use the standard MS compiler pattern to detect errors, warnings and infos
            "problemMatcher": "$msCompile"
        },
        {
            "label": "build (Sanitize Debud)",
            "type": "shell",
            "command": "make",
            "args": ["sanitze=1", "debug=1"],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "presentation": {
                // Reveal the output only if unrecognized errors occur.
                "reveal": "always"
            },
            // Use the standard MS compiler pattern to detect errors, warnings and infos
            "problemMatcher": "$msCompile"
        },
        {
            "label": "build (Sanitize Smoke)",
            "type": "shell",
            "command": "make",
            "args": ["sanitize=1", "smoke=1", "debug=1"],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "presentation": {
                // Reveal the output only if unrecognized errors occur.
                "reveal": "always"
            },
            // Use the standard MS compiler pattern to detect errors, warnings and infos
            "problemMatcher": "$msCompile"
        },
        {
            "label": "build (Smoke debug)",
            "type": "shell",
            "command": "make",
            "args": ["smoke=1", "debug=1"],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "presentation": {
                // Reveal the output only if unrecognized errors occur.
                "reveal": "always"
            },
            // Use the standard MS compiler pattern to detect errors, warnings and infos
            "problemMatcher": "$msCompile"
        },
        {
            "label": "Format Code",
            "type": "shell",
            "command": "make",
            "args": ["format"],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "presentation": {
                // Reveal the output only if unrecognized errors occur.
                "reveal": "always"
            },
            // Use the standard MS compiler pattern to detect errors, warnings and infos
            "problemMatcher": "$msCompile"
        }
    ]
}